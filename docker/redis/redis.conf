# =============================================================================
# Redis Configuration for ShowSync Development Environment
# =============================================================================
# This configuration file is optimized for local development use.
# It provides a balance between performance, reliability, and resource usage
# suitable for running Redis in a Docker container during development.
#
# Key Features:
# - Memory optimization for development workloads
# - Persistence settings for data durability
# - Security settings appropriate for local development
# - Performance tuning for typical ShowSync use cases
# =============================================================================

# =============================================================================
# NETWORK AND SECURITY
# =============================================================================

# Bind to all interfaces (safe in Docker environment)
bind 0.0.0.0

# Default port
port 6379

# Disable protected mode for development (Docker networking handles isolation)
protected-mode no

# TCP listen backlog
tcp-backlog 511

# TCP keepalive
tcp-keepalive 300

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Set server verbosity to 'notice'
# Options: debug, verbose, notice, warning
loglevel notice

# Specify the log file name. Empty string means logging to stdout
logfile ""

# Set the number of databases (ShowSync uses database 0 by default)
databases 16

# =============================================================================
# SNAPSHOTTING (PERSISTENCE)
# =============================================================================

# Save the DB on disk:
# save <seconds> <changes>
# Save after 900 sec (15 min) if at least 1 key changed
save 900 1
# Save after 300 sec (5 min) if at least 10 keys changed
save 300 10
# Save after 60 sec if at least 10000 keys changed
save 60 10000

# Compress string objects using LZF when dumping
rdbcompression yes

# Checksum the RDB file
rdbchecksum yes

# The filename where to dump the DB
dbfilename dump.rdb

# The working directory
dir /data

# =============================================================================
# REPLICATION
# =============================================================================

# Replication is disabled for development (single instance)
# Master authentication (if needed in production)
# masterauth <master-password>

# Slave authentication (if needed in production)  
# requirepass <password>

# =============================================================================
# SECURITY
# =============================================================================

# Disable some commands that can be dangerous in production
# For development, we keep them enabled for debugging
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""

# =============================================================================
# LIMITS
# =============================================================================

# Set the max number of connected clients
maxclients 10000

# Set the max memory usage (256MB for development)
# This prevents Redis from consuming too much memory during development
maxmemory 256mb

# What to do when max memory is reached:
# volatile-lru -> remove the key with an expire set using an LRU algorithm
# allkeys-lru -> remove any key according to the LRU algorithm
# volatile-random -> remove a random key with an expire set
# allkeys-random -> remove a random key, any key
# volatile-ttl -> remove the key with the nearest expire time (minor TTL)
# noeviction -> don't expire at all, just return an error on write operations
maxmemory-policy allkeys-lru

# LRU and minimal TTL algorithms are not precise but approximated algorithms
maxmemory-samples 5

# =============================================================================
# APPEND ONLY MODE (AOF)
# =============================================================================

# Enable AOF for better durability in development
appendonly yes

# The name of the append only file
appendfilename "appendonly.aof"

# AOF fsync policy:
# no: don't fsync, just let the OS flush the data when it wants (faster)
# always: fsync after every write to the append only log (slow, safest)
# everysec: fsync only one time every second (compromise)
appendfsync everysec

# Prevent fsync during rewrites
no-appendfsync-on-rewrite no

# Automatically rewrite the AOF file when it grows too large
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Load truncated AOF file on startup
aof-load-truncated yes

# =============================================================================
# LUA SCRIPTING
# =============================================================================

# Max execution time for Lua scripts in milliseconds
lua-time-limit 5000

# =============================================================================
# REDIS CLUSTER (DISABLED FOR DEVELOPMENT)
# =============================================================================

# Redis Cluster is disabled for development
# cluster-enabled no

# =============================================================================
# SLOW LOG
# =============================================================================

# Log queries slower than this value (microseconds)
slowlog-log-slower-than 10000

# Maximum length of slow log
slowlog-max-len 128

# =============================================================================
# LATENCY MONITOR
# =============================================================================

# Enable latency monitoring for operations slower than this threshold
latency-monitor-threshold 100

# =============================================================================
# EVENT NOTIFICATION
# =============================================================================

# Enable keyspace notifications for ShowSync features like cache invalidation
# K = keyspace events
# E = keyevent events  
# g = generic commands like DEL, EXPIRE, RENAME
# $ = string commands
# x = expired events
notify-keyspace-events "KEg$x"

# =============================================================================
# ADVANCED CONFIG
# =============================================================================

# Hash table size for databases (optimized for development)
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression settings
list-max-ziplist-size -2
list-compress-depth 0

# Set max entries for small sets
set-max-intset-entries 512

# Sorted set settings
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation settings
hll-sparse-max-bytes 3000

# Streams settings
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client output buffer limits for different classes of clients
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol buffer limit
proto-max-bulk-len 512mb

# =============================================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# =============================================================================

# Disable timeout for development (clients won't be disconnected)
timeout 0

# Enable active defragmentation (Redis 4.0+) for development
# activedefrag yes
# active-defrag-ignore-bytes 100mb
# active-defrag-threshold-lower 10
# active-defrag-threshold-upper 100 